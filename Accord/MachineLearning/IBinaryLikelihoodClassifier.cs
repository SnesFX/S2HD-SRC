using System;

namespace Accord.MachineLearning
{
	// Token: 0x02000051 RID: 81
	public interface IBinaryLikelihoodClassifier<TInput> : IBinaryScoreClassifier<TInput>, IBinaryClassifier<TInput>, IMulticlassClassifier<TInput>, IMultilabelClassifier<TInput>, IMultilabelClassifier<TInput, int[]>, IClassifier<TInput, int[]>, IClassifier, ITransform<TInput, int[]>, ITransform, IMultilabelClassifier<TInput, bool[]>, IClassifier<TInput, bool[]>, ITransform<TInput, bool[]>, IMultilabelClassifier<TInput, double[]>, IClassifier<TInput, double[]>, ITransform<TInput, double[]>, IMulticlassClassifier<TInput, int>, IClassifier<TInput, int>, ITransform<TInput, int>, IMulticlassClassifier<TInput, double>, IClassifier<TInput, double>, ITransform<TInput, double>, IClassifier<TInput, bool>, ITransform<TInput, bool>, IMulticlassOutScoreClassifier<TInput, bool>, IMulticlassScoreClassifierBase<TInput, bool>, IMultilabelOutScoreClassifier<TInput, bool>, IMultilabelScoreClassifierBase<TInput, bool>, IMulticlassScoreClassifier<TInput>, IMulticlassScoreClassifier<TInput, int>, IMulticlassOutScoreClassifier<TInput, int>, IMulticlassScoreClassifierBase<TInput, int>, IMultilabelOutScoreClassifier<TInput, int>, IMultilabelScoreClassifierBase<TInput, int>, IMulticlassRefScoreClassifier<TInput, int[]>, IMultilabelRefScoreClassifier<TInput, int[]>, IMultilabelScoreClassifierBase<TInput, int[]>, IMulticlassScoreClassifier<TInput, double>, IMulticlassOutScoreClassifier<TInput, double>, IMulticlassScoreClassifierBase<TInput, double>, IMultilabelOutScoreClassifier<TInput, double>, IMultilabelScoreClassifierBase<TInput, double>, IMulticlassRefScoreClassifier<TInput, double[]>, IMultilabelRefScoreClassifier<TInput, double[]>, IMultilabelScoreClassifierBase<TInput, double[]>, IMulticlassRefScoreClassifier<TInput, bool[]>, IMultilabelRefScoreClassifier<TInput, bool[]>, IMultilabelScoreClassifierBase<TInput, bool[]>, IMultilabelScoreClassifier<TInput>, IMultilabelScoreClassifier<TInput, int>, IMultilabelScoreClassifier<TInput, double>, IMulticlassOutLikelihoodClassifier<TInput, bool>, IMultilabelOutLikelihoodClassifier<TInput, bool>, IMultilabelLikelihoodClassifierBase<TInput, bool>, IMulticlassLikelihoodClassifierBase<TInput, bool>, IMulticlassLikelihoodClassifier<TInput>, IMulticlassLikelihoodClassifier<TInput, int>, IMulticlassOutLikelihoodClassifier<TInput, int>, IMultilabelOutLikelihoodClassifier<TInput, int>, IMultilabelLikelihoodClassifierBase<TInput, int>, IMulticlassLikelihoodClassifierBase<TInput, int>, IMulticlassRefLikelihoodClassifier<TInput, int[]>, IMultilabelRefLikelihoodClassifier<TInput, int[]>, IMultilabelLikelihoodClassifierBase<TInput, int[]>, IMulticlassLikelihoodClassifier<TInput, double>, IMulticlassOutLikelihoodClassifier<TInput, double>, IMultilabelOutLikelihoodClassifier<TInput, double>, IMultilabelLikelihoodClassifierBase<TInput, double>, IMulticlassLikelihoodClassifierBase<TInput, double>, IMulticlassRefLikelihoodClassifier<TInput, double[]>, IMultilabelRefLikelihoodClassifier<TInput, double[]>, IMultilabelLikelihoodClassifierBase<TInput, double[]>, IMulticlassRefLikelihoodClassifier<TInput, bool[]>, IMultilabelRefLikelihoodClassifier<TInput, bool[]>, IMultilabelLikelihoodClassifierBase<TInput, bool[]>, IMultilabelLikelihoodClassifier<TInput>, IMultilabelLikelihoodClassifier<TInput, int>, IMultilabelLikelihoodClassifier<TInput, double>
	{
		// Token: 0x06000236 RID: 566
		IMulticlassLikelihoodClassifier<TInput> ToMulticlass();

		// Token: 0x06000237 RID: 567
		IMulticlassLikelihoodClassifier<TInput, T> ToMulticlass<T>();
	}
}
